# ------------------------------------------------------
# 環境
stage: "development"
env: "vagrant"
project_root: /vagrant
app_user: vagrant
use_deployer: false

# ------------------------------------------------------
# AWS
aws_use_cloud_watch_logs: false
aws_cloud_watch_log_group_prefix: ""


# ------------------------------------------------------
# kernel
kernel_net_core_somaxconn: 128
kernel_fs_file_max: 200104
kernel_net_ipv4_tcp_max_syn_backlog: 128
kernel_net_ipv4_ip_local_port_range: "32768    60999"
kernel_net_ipv4_tcp_tw_reuse: 0

# ------------------------------------------------------
# nginx
document_root: "/vagrant/public"
nginx_listen_backlog: 511
nginx_worker_connections: 768   # upstreamとの接続も含めたコネクション数
nginx_worker_processes: "auto"  # コア数に応じて自動で調整
nginx_worker_rlimit_nofile: 1024 # デフォルト値はなし
nginx_keepalive_timeout: 75     # ELB配下の場合は長くする
nginx_open_file_cache: "off"      # 本番は"max=100 inactive=20s"など。deployerを使う環境ではoff
nginx_client_max_body_size: "1m"
nginx_client_body_buffer_size: "16k"
nginx_proxy_buffer_size: "8k"
nginx_proxy_buffers: "8 8k"
nginx_proxy_max_temp_file_size: "1024m"
nginx_proxy_connect_timeout: "60s"
nginx_proxy_send_timeout: "60s"
nginx_proxy_read_timeout: "60s"

# ------------------------------------------------------
# PHP
php_fpm_process_max: 128
php_fpm_rlimit_files: 1024
php_fpm_listen_backlog: 511
php_fpm_max_children: 5
php_fpm_start_servers: 2
php_fpm_min_spare_servers: 1
php_fpm_max_spare_servers: 3
php_fpm_process_idle_timeout: "10s"
php_fpm_max_requests: 500

php_default_socket_timeout: 60
php_max_execution_time: 30
php_max_file_uploads: 20
php_max_input_time: 60
php_memory_limit: "128M"
php_opcache_memory_consumption: 128
php_opcache_max_accelerated_files: 10000
php_opcache_validate_timestamps: 1
php_opcache_revalidate_freq: 2
php_post_max_size: "8M"
php_upload_max_filesize: "2M"

php_session_gc_divisor: 1000
php_session_gc_maxlifetime: 1440

# ------------------------------------------------------
# Application

app_key: "base64:GDHMDGMgP2kpi6e2gJ3mKUeuhXLqOKuRbyEIw6JKdaY="  # 外部環境ではVaultで暗号化する
app_url: "http://127.0.0.1:8200"
log_use_post_log: false  # POSTログを利用するかどうか
session_driver: "file"



# ------------------------------------------------------
# MySQL
db_host: "127.0.0.1"
db_port: 3306
db_name: "work_logger"
db_user: "work_logger"
db_pass: "secret"  # 外部環境の場合はVaultで暗号化する
test_db_name: "work_logger_test"

# ------------------------------------------------------
# Redis
redis_host: ""
redis_port: ""


# ------------------------------------------------------
# MAIL
mail_driver: log
mail_default_from_address: "info-local@urban-theory.net"
mail_default_from_name: "[local-dev]Default"


# ------------------------------------------------------
# logrotate
log_keep_days: 7

# ------------------------------------------------------
# Fluentd(td-agent)
fluentd_workers: 1

